
var Q = require("q");
var join = function (values, fulfilled, rejected) {
    var reasons;
    return Q.when(values.reduce(function (done, value, i) {
                console.log(done, value, i);
        return Q.when(done, function () {
            return Q.when(value, function (value) {
                values[i] = value;
            }, function (reason) {
                reasons = reasons || [];
                reasons[i] = reason;
                return Q.reject(reason);
            });
        });
    }, undefined), function () {
        return fulfilled.apply(null, values);
    }, function () {
        reasons = reasons || [];
        return rejected && rejected.apply(null, reasons) || Q.reject();
    });
};

var a = 10, b = Q.reject("bad"), c = 30;
join([a, b, c], function (a, b, c) {
    console.log(a, b, c);
}, function (a, b, c) {
    console.log(a, b, c);
})

